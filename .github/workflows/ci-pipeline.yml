name: Service Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
  #
  #      - name: Set up JDK 17
  #        uses: actions/setup-java@v3
  #        with:
  #          java-version: '17'
  #          distribution: 'temurin'
  #          cache: maven
  #
  #      - name: Build with Maven
  #        run: mvn -B package --file pom.xml
  #
  #  scan:
  #    name: Scan
  #    runs-on: ubuntu-latest
  #    needs: build
  #    steps:
  #      - name: Checkout
  #        uses: actions/checkout@v2
  #
  #      - name: Set up JDK 17
  #        uses: actions/setup-java@v2
  #        with:
  #          java-version: '17'
  #          distribution: 'temurin'
  #          cache: maven
  ##
  #      - name: Run JaCoCo scan and verify
  #        run: |
  #          mvn verify
  #          mvn jacoco:prepare-agent jacoco:report

  #      - name: Dependency check
  #        run: |
  #          mvn -B org.owasp:dependency-check-maven:check

  #      - name: Upload coverage to SonarCloud
  #        uses: sonarsource/sonarcloud-github-action@master
  #        env:
  #          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #        with:
  #          projectBaseDir: .
  #          sonar.organization: ${{ secrets.SONAR_ORGANIZATION }}
  #          sonar.projectKey: ${{ secrets.SONAR_PROJECT_KEY }}
  #          sonar.projectName: ${{ secrets.SONAR_PROJECT_NAME }}
  #          sonar.projectVersion: ${{ secrets.SONAR_PROJECT_VERSION }}
  #          sonar.coverage.jacoco.xmlReportPaths: target/site/jacoco/jacoco.xml
  #          sonar.working.directory: target/sonar
  #          sonar.sourceEncoding: UTF-8
  #          sonar.language: java
  #          sonar.java.binaries: target/classes
  #          sonar.java.libraries: target/lib/*.jar
  #          sonar.java.source: 17
  #          sonar.java.target: 17
  #          sonar.java.coveragePlugin: jacoco
  #          sonar.junit.reportPaths: target/surefire-reports
  #          sonar.dependencyCheck.jsonReportPath: target/dependency-check-report.json
  #          sonar.dependencyCheck.htmlReportPath: target/dependency-check-report.html


#  publish:
#    name: Publish
#    runs-on: ubuntu-latest
#    needs: scan
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v2
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#          cache: maven
#
#      - name: Login to DockerHub
#        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Publish to DockerHub
#        run: |
#          docker build -t ${{ secrets.DOCKER_USERNAME }}/employer:${{ github.sha }} .
#          docker tag ${{ secrets.DOCKER_USERNAME }}/employer:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/employer:latest
#          docker push ${{ secrets.DOCKER_USERNAME }}/employer

#  deploy:
#    name: Deploy
#    runs-on: ubuntu-latest
#    needs: publish
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v2
#        with:
#          java-version: '17'
#
#      - name: Deploy to Kubernetes
#        uses: appleboy/kubectl-action@master
#        env:
#          KUBE_CONFIG_DATA: ${{ secrets.K
